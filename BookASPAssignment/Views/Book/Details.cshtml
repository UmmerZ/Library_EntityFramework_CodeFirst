
@{
    ViewData["Title"] = "Details";
}


@if (ViewBag.Message != null)
{
    <p class="alert-@(ViewBag.Error != null ? "danger" : "success")">@(ViewBag.Message)</p>
    if (ViewBag.Error != null)
    {
        <ul>
            @foreach (Exception e in ViewBag.Exception.ValidationExceptions)
            {
                <li class="alert-danger">@(e.Message)</li>
            }
        </ul>
    }
}


@if (ViewBag.Book != null)
{
    <h1>Book Details: </h1>

    <p>Book ID: @(ViewBag.Book.ID)</p>
    <p>Title: @(ViewBag.Book.Title)</p>
    <p>Author: @(ViewBag.Book.Author.Name)</p>
    <p>Publication Date: @(((DateTime)ViewBag.Book.PublicationDate).ToLongDateString())</p>

    @if (ViewBag.Book.Borrows.Count > 0)
    {<H1>Library Details</H1>
        foreach (Borrow borrow in ViewBag.Book.Borrows)
        {
            <p>Checked Out Date: @(((DateTime)borrow.CheckedOutDate).ToLongDateString())</p>
            <p>Due Date: @(((DateTime)borrow.DueDate).ToLongDateString())</p>

            <p>Returned Date: @((borrow.ReturnedDate == null ? "Not Returned" : ((DateTime)borrow.ReturnedDate).ToLongDateString()))</p>
            <p>Number of Extensions Given: @(borrow.ExtentionCount)</p>

            if (borrow.ReturnedDate == null || borrow.ReturnedDate < DateTime.Now)
            {
                <div class="alert alert-dark">This Book Cannot be Borrowed as it has not been returned yet!</div>
            }
        }


        <a class="btn btn-success" href="/Book/Return?bookID=@(ViewBag.Book.ID)">Return Book</a>

        <a class="btn btn-primary" href="/Book/Extend?bookID=@(ViewBag.Book.ID)">Extend Due Date</a>

        <a class="btn btn-danger" href="/Book/Delete?id=@(ViewBag.Book.ID)">Delete Book</a>



    }
    else
    {
        <a class="btn btn-warning" href="/Book/BorrowCreate?bookID=@(ViewBag.Book.ID)">Create Borrow</a>
        @*<h1>Details</h1>
            <p>Book has not been borrowed. You want to c <a href="/Book/List">Click here to return to the book list</a>.</p>*@
    }
} 